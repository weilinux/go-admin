以工作需求为驱动、以开源项目为切入点、以二次开发为提升手段
以工作需求为驱动、以开源项目为切入点、以二次开发为提升手段
以工作需求为驱动、以开源项目为切入点、以二次开发为提升手段

推荐你学习以下开源项目：gin、kubernetes、etcd、tidb、gorm、kratos、grpc-go

以二次开发为提升手段： 有了优秀的开源项目，我们就要基于这个开源项目去实现产品的功能，
在实现产品功能的时候，你需要非常了解开源项目的实现，并且基于理解改造开源项目，改造的
部分就是你独立开发的部分，通过手撸代码，实现功能，可以让你变成一个真正的 Go Coder。


主题 1-GO和 TDD

Go 和 TDD 编程简介
关于增长最快的语言以及为什么我们应该学习 Golang 的概述
设置环境和代码组织
语言机制：语法、数据结构、指针
Go 如何在单 CPU 和多 CPU 中运行
实践TDD方法
练习：构建一个自动增量编号和多 CPU 问题以了解数据竞争
作业：使用指针将 CSV 转换为 YAML


主题2-深入Golang

发现 goroutines、channel、defer、panic、recover
Go 中的错误处理
Golang 上下文
Golang 反射
安装 Docker/Laradock 以安装 MySQL 的指南
使用数据库/Mysql
数据库连接池
练习：使用 Gorm 的 CURD
作业：编写单元测试并了解数据库的模拟测试


主题 3 - 通过设计 RESTful API 深入 Golang

通过设计 RESTful API 深入研究 Golang
使用 Go 和 Gin/Echo 框架的 CRUD 服务
HTTP 协议、Cookie、会话
使用 Nginx 进行负载平衡、高性能和可扩展性
使用数据库/MongoDB
API 缓存、验证
JSON编码/解码
练习 1：使用 Mongodb 为 Todo MVC 应用构建笔记服务
练习 2：构建 Voucher 服务以了解 DB 隔离
作业：编写单元测试并了解 HTTP 的模拟测试


主题 4 - 使用 Go 设计和应用微服务/无服务器架构

RPC、GRPC 和 GRPC 的好处
如何使用 GRPC 设计新系统
如何将 GRPC 集成到现有系统中
使用 Consul 介绍服务发现
练习 1：将笔记服务从
topic 3
 GRPC重构
练习 2：编写一个客户端调用来记录基于服务发现设计的服务
作业：发现Kafka学习事件驱动架构


主题 5 - 使用 Go 和最终项目开发项目的最佳实践

使用 ELK 堆栈在生产环境中进行 CI/CD、日志记录和监控
使用 Jenkins/K8S 为笔记服务部署 CI/CD
最终项目的概述和要求
课程回顾和反馈
练习：将 CI/DC 应用于
topic 3
作业：将 Elasticsearch APM 应用到
topic 3

主题 6 - 最终项目和演示

构建自己的开源软件
构建一个辅助库（例如：移植下划线）
或者构建一个http路由器
或者构建一个（微）服务来生成假数据
或者用你自己的想法构建一个应用程序
